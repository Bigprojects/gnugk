<sect>Configuración de Accounting
<p>
Accounting se denomina a las operaciones que los usuarios realizarán en el sistema
del gatekeeper: inicio de una llamada, parada y retroalimentación de la misma; e 
incluso el inicio y parada del propio gatekeeper.

<p>
Las siguientes secciones en el fichero de configuración pueden ser usadas para
configurar el accounting.

<sect1>Sección &lsqb;Gatekeeper::Acct&rsqb;
<label id="gkacct">
<p>
La seción define una lista de módulos que serán los que realicen el accounting.
Las cuentas son para anotar eventos de encendido/apagado del gatekeeper y eventos de
inicio/parada/actualización de llamada. Cada módulo de accounting anota eventos
recibidos a un módulo de almacenaje específico. Dicho almacenamiento puede ser en 
texto plano o un servidor RADIUS y muchos más. La configuración es muy similar a la 
de autenticación de gatekeeper (ver <ref id="gkauth" name="[Gatekeeper::Auth]">).


Todos los CDRs serán también enviados al puerto de estado y pueden ser usados por
aplicaciones externas.

<descrip>
<tag/Sintaxis:/
<tscreen><verb>
acctmod=acciones

 <acctmod>  := FileAcct | RadAcct | SQLAcct | ...
 <acciones> := <control>[;<evento>,<evento>,...]
 <control>  := optional | required | sufficient | alternative
 <evento>   := start | stop | connect | update | on | off
</verb></tscreen>
</descrip>
La lista de eventos le dice al gatekeeper cual de los eventos debe realizar las
anotaciones con el módulo de accounting dado (si un tipo de evento está soportado
por el módulo):
<itemize>
<item><tt/start/ - una llamada ha sido iniciada y un mensaje de Configuración ha sido recibido (solo disponible en modo enrutado),
<item><tt/connect/ - una llamada ha sido establecida (solo disponible en modo enrutado),
<item><tt/update/ - una llamada está activa y se realizó la actualización periódica
	para reflejar la duración de la nueva llamada. La Frecuencia de estas actualizaciones 
  está determinada en la sección <bf/AcctUpdateInterval/ variable de <ref id="calltable"
  name="[CallTable]">,
<item><tt/stop/ - una llamada ha sido desconectada o parada (eliminada de la tabla de llamadas de GK),
<item><tt/on/ - el gatekeeper ha sido iniciado,
<item><tt/off/ - el gatekeeper ha sido apagado.
</itemize>
Un evento anotado por un módulo puede obtener uno de estos tres códigos de resultado:
<bf/ok/, <bf/fail/, <bf/next/.
<itemize>
<item><tt/ok/ - el evento ha sido anotado correctamente por este módulo,
<item><tt/fail/ - el módulo falló al anotar el evento,
<item><tt/next/ - el evento no ha sido anotado por este módulo, porque el módulo
  no está configurado para o no soporta este tipo de evento.
</itemize>
Los módulos de accounting pueden ser apilados para anotar eventos de multiples módulos
o para crear configuraciones a prueba de fallos.
 <bf/control/ bandera para cada módulo, junto con los códigos de resultado,
 define lo que es el estado final del proceso del vento por el módulo apilado completo.
 Si el resultado final es <bf/failure/, algunas acciones especiales se harían en su
 lugar. Actualmente, si en un evento de llamada iniciada (<br/start/) 
 la anotación falla, la llamada es desconectada inmediatamente.
Los siguientes estados (banderas) de <bf/control/ están reconocidos:
<itemize>
<item><tt/required/ - si el módulo falla al anotar un evento, el estado final es
                      configurado a fallo y el evento es pasado a cualquiera
                      de los restantes módulos,
<item><tt/optional/ - el módulo intenta anotar un evento, pero el estado final
                      no es afectado si sale bien o falla (a excepción de cuando el
                      módulo es el último en la lista). El vento es siempre pasado
                      a cualquiera de los módulos restantes,
<item><tt/sufficient/ - el módulo determina el estado final. Si un evento es anotado
                        satisfactoriamente, ningún módulo más es procesado. En caso
                        contrario el estado final es configurado a fallo y el evento
                        es pasado a cualquiera del resto de módulos,
<item><tt/alternative/ - si el módulo anota un evento satisfactoriamente, ningún 
                         módulo más será procesado. En caso contrario el estado final 
                         no será modificado y el evento es pasado al resto de módulos.
</itemize>

Los módulos de acconting actualmente soportados:
<itemize>
<item><tt>FileAcct</tt>
<p>
Un anotador de texto plano CDR. Este emite una línea de estado como líneas CDR a
un fichero de texto especificado. Este modulo soporta solo el evento de accounting
<bf/stop/.
Las opciones de configuración serán leídas de la sección 
<ref id="fileacct" name="[FileAcct]">.

<item><tt>RadAcct</tt>
<p>
Este módulo realiza accounting a través de RADIUS. Este soporta todos los tipos
de eventos (start, stop, update, on, off).
Ver la sección <ref id="radacct" name="[RadAcct]"> para detalles de configuración.

<item><tt>SQLAcct</tt>
<p>
Este módulo realiza accounting a través de SQL. Este soporta los tipos de evento (start, stop, update).
Ver la sección <ref id="sqlacct" name="[SQLAcct]"> para detalles de configuración.

<item><tt>default</tt>
<p>
Este es un pseudo-módulo especial - este es usado para configurar el estado
final si los módulos precedentes no lo han determinado. El formato es como
sigue:
<descrip>
<tag/Sintaxis:/
<tscreen><verb>
 default=<estado>[;<evento>,<evento>,...]
 <estado> := accept | fail
 <evento> := start | stop | update | on | off
</verb></tscreen>
</descrip>

</itemize>

Ejemplo de configuración 1 (intenta anotar el inicio/fin de una llamada
con un servidor RADIUS, y siempre escribe un CDR a un fichero de texto):
<descrip>
<tag/Ejemplo:/
<tt/RadAcct=optional;start,stop/<newline>
<tt/FileAcct=required/<newline>
</descrip>

Ejemplo de configuración 2 (intenta anotar el inicio/fin de una llamada 
con un servidor RADIUS, si este falla usa un fichero de anotaciones CDR):
<descrip>
<tag/Ejemplo:/
<tt/RadAcct=alternative;start,stop/<newline>
<tt/FileAcct=sufficient;stop/<newline>
<tt/default=accept/<newline>
</descrip>
La regla <bf/default/ es requerida aquí para prevenir que la llamada sea rechazada 
por si la anotación del evento de inicio de RadAcct falla. Si RadAcct retorna 
el código <bf/fail/, se pasa al módulo FileAcct. El módulo FileAcct no soporta
el evento <bf/start/, así que retorna el código <bf/next/. Si no estuviese la regla
<bf/default/, el estado final sería failure, porque ningún módulo ha sido capaz de
anotar el evento.

Ejemplo de configuración 3 (siempre anota los eventos de inicio y fin de llamada con
un servidor RADIUS, si este falla para el evento de fin de llamada, usa un fichero
CDR para almacenar la información de la llamada):
<descrip>
<tag/Ejemplo:/
<tt/RadAcct=alternative;start,stop/<newline>
<tt/FileAcct=sufficient;stop/<newline>
<tt/default=fail;start/<newline>
</descrip>
La regla <bf/default/ es opcional aquí. Si RadAcct retorna el código <bf/fail/
para el evento <bf/start/, el código es pasado al módulo FileAcct. El módulo
FileAcct no soporta el evento <bf/start/, así que retorna el código <bf/next/.
La regla <bf/default/ se asegura de que la llamada está desconectada si 
el evento de inicio de llamada puede no haber sido anotado con RadAcct. Sino
deseamos almacenar un CDR en un fichero de texto en caso de que el servidor
RADIUS esté caído cuando la llamada se desconecte, así podemos ir a por la 
duración de la llamada dentro del sistema de facturación más tarde.

<sect1>Sección &lsqb;FileAcct&rsqb;
<label id="fileacct">
<p>
Este módulo de accounting escribe líneas CDR a un fichero de texto específicado.
El formato CDR puede ser uno estándar (el mismo que se puede ver por la interfaz
de estado) o uno personalizado (usando la cadena de consulta parametrizada).

<itemize>
<item>
<tt/DetailFile=RUTA_COMPLETA_Y_NOMBRE_DE_FICHERO/<newline>
Por defecto: N/A
<p>
Una ruta completa para el fichero de texto plano CDR. Si un fichero con el 
nombre dado ya existe, los nuevos CDRs serán añadidos al final del fichero.

<item>
<tt/StandardCDRFormat=0/<newline>
Por defecto: <tt/1/
<p>
Usa un formato CDR compatible con el formato de la interfaz de estado CDR
(<tt/1/) o crea cadenas CDR personalizadas desde la cadena parametrizada
<bf/CDRString/.

<item>
<tt/CDRString=%s|%g|%u|%{Calling-Station-Id}|%{Called-Station-Id}|%d|%c/<newline>
Por defecto: N/A
<p>
Si <bf/StandardCDRFormat/ está desactivado (0) o no se especifica nada, 
esta cadena parametrizada instruye al gatekeeper de como crear CDRs 
personalizados. Los parámetros son especificados usando el caracter <tt/%/ y
pueden ser una letra (como <tt/%n/) o más (como <tt/%{CallId}/). Cualquier
caracter más que no sea nombre de parámetro será simplemente copiado al final
de la cadena CDR. Los parámetros reconocidos son los siguientes:
<itemize>
<item><tt/%g/ - nombre del gatekeeper
<item><tt/%n/ - número de llamada (no es único después del reinicio del gatekeeper)
<item><tt/%d/ - duración de la llamada (segundos)
<item><tt/%c/ - causa de la desconexión Q.931 (entero decimal)
<item><tt/%s/ - único (para este gatekeeper) identificador de sesión (Acct-Session-Id)
<item><tt/%u/ - H.323 ID de la parte llamada
<item><tt/%{CallId}/ - H.323 identificador de llamada (16 hex digitos de 8-bits)
<item><tt/%{ConfId}/ - H.323 identificador de conferencia (16 hex digitos de 8-bits)
<item><tt/%{setup-time}/ - cadena de hora y fecha para el mensaje de configuración Q.931
<item><tt/%{connect-time}/ - cadena de hora y fecha para un evento de llamada conectada
<item><tt/%{disconnect-time}/ - cadena de hora y fecha para un evento de llamada desconectada
<item><tt/%{caller-ip}/ - dirección IP por la que llama el emisor
<item><tt/%{caller-port}/ - puerto por el que llama el emisor
<item><tt/%{callee-ip}/ - dirección IP por la que recibe la llamada el receptor
<item><tt/%{callee-port}/ - puerto por el que recibe la llamada el receptor
<item><tt/%{src-info}/ - una lista separada por comas de alias del emisor
<item><tt/%{dest-info}/ - una lista separada por comas de alias del receptor
<item><tt/%{Calling-Station-Id}/ - número del emisor
<item><tt/%{Called-Station-Id}/ - número del receptor (reescrito)
<item><tt/%{Dialed-Number}/ - número marcado (como es recibido por la parte llamada)
</itemize><newline>

<item><tt/TimestampFormat=Cisco/<newline>
Por defecto: <tt>N/A</tt>
<p>
Formato de cadena de fecha y hora impreso en cadenas CDR. Si esta configuración
no es especificada, una global de la sección principal del gatekeeper será aplicada.

<item>
<tt/Rotate=hourly | daily | weekly | monthly | L... | S.../<newline>
Por defecto: N/A
<p>
Si se configura, el fichero CDR será rotado basado en esta configuración. La
rotación horaria activa una rotación por hora, la diaria - una por día, 
semanal - una por semana y mensual - una por mes. El momento exacto de la rotación
es determinado por una combinación de RotateDay y RotateTime. Durante la rotación,
un fichero existente será renombrado a CURRENT_FILENAME.YYYYMMDD-HHMMSS, donde
YYYYMMDD-HHMMSS es reemplazado con la hora y fecha actuales y un nuevo CDR es
anotado a un fichero vacío.<newline>
Además, la rotación por número de CDRs escritos (L...) y por tamaño de fichero 
(S...) está soportado. El prefijo <tt/L/ especifica un número de líneas CDR 
escritas, el prefijo <tt/S/ especifica el tamaño de un fichero CDR. Los sufijos 
<tt/k/ y <tt/m/ pueden ser usados para especificar miles (kilobytes) y millones
(megabytes) de bytes. 
Ver los ejemplos para más detalles.

<descrip>
<tag/Ejemplo 1 - sin rotación:/
<tt/&lsqb;FileAcct&rsqb;/<newline>
<tt>DetailFile=/var/log/gk/cdr.log</tt><newline>
</descrip>

<descrip>
<tag/Ejemplo 2 - rotación cada hora (00:45, 01:45, ..., 23:45):/
<tt/&lsqb;FileAcct&rsqb;/<newline>
<tt>DetailFile=/var/log/gk/cdr.log</tt><newline>
<tt>Rotate=hourly</tt><newline>
<tt>RotateTime=45</tt><newline>
</descrip>

<descrip>
<tag/Ejemplo 3 - rota cada día a las 23:00 (11PM):/
<tt/&lsqb;FileAcct&rsqb;/<newline>
<tt>DetailFile=/var/log/gk/cdr.log</tt><newline>
<tt>Rotate=daily</tt><newline>
<tt>RotateTime=23:00</tt><newline>
</descrip>

<descrip>
<tag/Ejemplo 4 - rota cada Domingo (Sunday) a las 00:59:/
<tt/&lsqb;FileAcct&rsqb;/<newline>
<tt>DetailFile=/var/log/gk/cdr.log</tt><newline>
<tt>Rotate=weekly</tt><newline>
<tt>RotateDay=Sun</tt><newline>
<tt>RotateTime=00:59</tt><newline>
</descrip>

<descrip>
<tag/Ejemplo 5 - rota el último día de cada mes:/
<tt/&lsqb;FileAcct&rsqb;/<newline>
<tt>DetailFile=/var/log/gk/cdr.log</tt><newline>
<tt>Rotate=monthly</tt><newline>
<tt>RotateDay=31</tt><newline>
<tt>RotateTime=23:00</tt><newline>
</descrip>

<descrip>
<tag/Ejemplo 6 - rota cada 10000 CDRs:/
<tt/&lsqb;FileAcct&rsqb;/<newline>
<tt>DetailFile=/var/log/gk/cdr.log</tt><newline>
<tt>Rotate=L10000</tt><newline>
</descrip>

<descrip>
<tag/Ejemplo 7 - rota por encima de los 10 kilobytes:/
<tt/&lsqb;FileAcct&rsqb;/<newline>
<tt>DetailFile=/var/log/gk/cdr.log</tt><newline>
<tt>Rotate=S10k</tt><newline>
</descrip>

</itemize>

<sect1>Sección &lsqb;RadAcct&rsqb;
<label id="radacct">
<p>
Este módulo de accounting envía datos de accounting a un servidor RADIUS. La
configuración del módulo es casi lo mismo que para los autenticadores RADIUS (ver
<ref id="radauth" name="[RadAuth]"> y <ref id="radaliasauth" name="[RadAliasAuth]">
para más detalles sobre los parámetros).

<itemize>
<item><tt/Servers=SERVER1[:AUTH_PORT:ACCT_PORT[:SECRET]];SERVER2[:AUTH_PORT:ACCT_PORT[:SECRET]];.../<newline>
Por defecto: <tt>N/A</tt>
<p>
Servidores RADIUS a los que enviar los datos de accounting. Si no se da puerto de 
información, el puerto usado se tomará de <tt/DefaultAcctPort/. Si SECRET no es
configurado, por defecto se usará el secreto compartido de <tt/SharedSecret/. 
El nombre del servidor puede ser tanto una dirección IP como un nombre DNS.

<descrip>
<tag>Líneas de <tt/Servidores/ de ejemplo:</tag>
<tt>Servers=192.168.1.1</tt><newline>
<tt>Servers=192.168.1.1:1645:1646</tt><newline>
<tt>Servers=192.168.1.1:1645:1646:secret1</tt><newline>
<tt>Servers=radius1.mycompany.com:1812:1813</tt><newline>
<tt>Servers=radius1.mycompany.com;radius2.mycompany.com</tt><newline>
<tt>Servers=radius1.mycompany.com:1812:1813:secret1;radius2.mycompany.com:1812:1813:secret2</tt><newline>
</descrip>

<item><tt/LocalInterface=IP_OR_FQDN/<newline>
Por defecto: <tt>N/A</tt>
<p>
Interfaz de red local en particular que el cliente RADIUS deberá
usar para comunicarse con los servidores RADIUS.

<item><tt/RadiusPortRange=10000-11000/<newline>
Por defecto: <tt>N/A</tt>
<p>
Por defecto (si esta opción esta activa) el cliente RADIUS
asigna los puertos dinámicamente como se especifique por el sistema operativo.
Si tu deseas restringir el cliente RADIUS para usar puertos desde
un rango particular solo - activa este parámetro.

<item><tt/DefaultAcctPort=PORT_NO/<newline>
Por defecto: <tt>1813</tt>
<p>
El puerto por defecto será usado por las solicitudes de accounting de RADIUS,
si no se especifica por el atributo <tt/Servers/.

<item><tt/SharedSecret=SECRET/<newline>
Por defecto: <tt>N/A (cadena vacía)</tt>
<p>
Un secreto usado para autenticar este GnuGK (cliente NAS) para el servidor RADIUS.
Esta debe ser una contraseña criptográficamente sólida. Este es el valor usado por
defecto, si no se especifica secret en <tt/Servers/.
Si <tt/EncryptAllPasswords/ está activado, o una variable <tt/KeyFilled/ se definida 
en esta sección, la contraseña en formato encriptado y debe ser creada usando la
utilidad <tt/addpasswd/.

<item><tt/RequestTimeout=TIMEOUT_MS/<newline>
Por defecto: <tt/2000/ (milisegundos)
<p>
Tiempo de espera (milisegundos) para la respuesta de un servidor RADIUS a una
solicitud enviada por GnuGK. Si no se recibe una respuesta dentro de este periodo
de tiempo, es consultado el siguiente servidor RADIUS.

<item><tt/IdCacheTimeout=TIMEOUT_MS/<newline>
Por defecto: <tt/9000/ (milisegundos)
<p>
Tiempo de espera (milisegundos) para una solicitud RADIUS con identificadores de
8-bits únicos.

<item><tt/SocketDeleteTimeout=TIMEOUT_MS/<newline>
Por defecto: <tt/60000/ (milisegundos) - 60 s
<p>
Tiempo que se espera para cerrar sockets RADIUS no usados.

<item><tt/RequestRetransmissions=NUMBER/<newline>
Por defecto: <tt/2/
<p>
Cuantas veces una simple solicitud RADIUS es transmitida a cada
servidor RADIUS configurado (si no se recibe una respuesta).

<item><tt/RoundRobinServers=BOOLEAN/<newline>
Por defecto: <tt/1/
<p>
Método de retransmisión de solicitudes RADIUS.

<item><tt/AppendCiscoAttributes=BOOLEAN/<newline>
Por defecto: <tt/0/
<p>
Si está activa, los atributos RADIUS específicos de fabricante Cisco
son incluídos en las solicitudes RADIUS (h323-conf-id,h323-call-origin,
h323-call-type).

<item><tt/TimestampFormat=ISO8601/<newline>
Por defecto: <tt>N/A</tt>
<p>
Formato de las cadenas de fecha y hora enviadas en los atributos RADIUS. Si este
atributo no está especificado, uno global de la sección principal de gatekeeper
será aplicado.

<item><tt/UseDialedNumber=BOOLEAN/<newline>
Por defecto: <tt/0/
<p>
Selecciona el tipo de número Called-Station-Id entre el original (como fue marcado
por el usuario) - <tt/UseDialedNumer=1/ - y el reescrito - <tt/UseDialedNumer=0/.

</itemize>

<sect1>Sección &lsqb;SQLAcct&rsqb;
<label id="sqlacct">
<p>
Este módulo de accounting almacena información de accounting directamente
a una base de datos SQL. Muchas opciones de configuración son comunes con
otros módulos SQL.

<itemize>
<item><tt/Driver=MySQL | PostgreSQL/<newline>
Por defecto: N/A
<p>
Manejador de base de datos SQL a usar. Actualmente, los manejadores implementados
son <tt/MySQL/ y <tt/PostgreSQL/.

<item><tt/Host=DNS[:PORT] | IP[:PORT]/<newline>
Por defecto: <tt/localhost/
<p>
Dirección de la máquina del servidor SQL. Puede está en forma de <tt/DNS[:PORT]/ o <tt/IP[:PORT]/. Como <tt/sql.mycompany.com/ o <tt/sql.mycompany.com:3306/ o <tt/192.168.3.100/.

<item><tt/Database=billing/<newline>
Por defecto: <tt/billing/
<p>
El nombre de la base de datos a la que conectarse.

<item><tt/Username=gnugk/<newline>
<p>
El nombre de usuario usado para conectarse a la base de datos.

<item><tt/Password=secret/<newline>
<p>
La contraseña usada para conectarse a la base de datos.
Si la contraseña no se especifica, se intentará una conexión a la
base de datos sin ninguna contraseña.
Si <tt/EncryptAllPasswords/ está activo, o una variable <tt/KeyFilled/ es definida
en esta sección, la contraseña está en una forma encriptada y debe ser creada
usando la utilidad <tt/addpasswd/.

<item><tt/StartQuery=INSERT .../<newline>
Por defecto: <tt>N/A</tt>
<p>
Define una consulta SQL usada para insertar un nuevo registro de llamada a la base
de datos. La consulta es parametrizada - eso significa que el reemplazo de parámetros
se hace antes de que cada consulta sea ejecutada. Los parámetros son precedidos por 
el caracter % y pueden ser una letra (como %u) o cadenas enteras (como %{src-info}).
Especifica %% para añadir un caracter de porcentaje dentro de la cadena de consulta
(como <bf/%%/).
Para <tt/SQLAcct/ se pueden utilizar los siguientes parámetros:
<itemize>
<item><tt/%g/ - nombre del gatekeeper
<item><tt/%n/ - número de llamada (no es único después del reinicio del gatekeeper)
<item><tt/%d/ - duración de la llamada (segundos)
<item><tt/%c/ - causa de la desconexión Q.931 (entero decimal)
<item><tt/%s/ - único (para este gatekeeper) identificador de sesión (Acct-Session-Id)
<item><tt/%u/ - H.323 ID de la parte llamada
<item><tt/%{gkip}/ - dirección IP del gatekeeper
<item><tt/%{CallId}/ - H.323 identificador de llamada (16 hex digitos de 8-bits)
<item><tt/%{ConfId}/ - H.323 identificador de conferencia (16 hex digitos de 8-bits)
<item><tt/%{setup-time}/ - cadena de hora y fecha para el mensaje de configuración Q.931
<item><tt/%{connect-time}/ - cadena de hora y fecha para un evento de llamada conectada
<item><tt/%{disconnect-time}/ - cadena de hora y fecha para un evento de llamada desconectada
<item><tt/%{caller-ip}/ - dirección IP por la que llama el emisor
<item><tt/%{caller-port}/ - puerto por el que llama el emisor
<item><tt/%{callee-ip}/ - dirección IP por la que recibe la llamada el receptor
<item><tt/%{callee-port}/ - puerto por el que recibe la llamada el receptor
<item><tt/%{src-info}/ - una lista separada por comas de alias del emisor
<item><tt/%{dest-info}/ - una lista separada por comas de alias del receptor
<item><tt/%{Calling-Station-Id}/ - número del emisor
<item><tt/%{Called-Station-Id}/ - número del receptor (reescrito)
<item><tt/%{Dialed-Number}/ - número marcado (como es recibido por la parte llamada)
</itemize>
<p>
Consulta de ejemplo:
<tscreen><verb>
INSERT INTO call (gkname, sessid, username, calling, called) 
	VALUES ('%g', '%s', '%u', '%{Calling-Station-Id}', '%{Called-Station-Id}')
</verb></tscreen>

<item><tt/StartQueryAlt=INSERT .../<newline>
Por defecto: <tt>N/A</tt>
<p>
Define una consulta SQL usada para insertar un nuevo registro de llamada en la
base de datos en caso de que <tt/StartQuery/ falle por alguna razón (la llamada
ya existe, por ejemplo).
La sintaxis y parámetros son los mismos que para <tt/StartQuery/.

<item><tt/UpdateQuery=UPDATE .../<newline>
Por defecto: <tt>N/A</tt>
<p>
Define una consulta SQL usada para actualizar un registro de llamada en una base
de datos con el estado de llamada actual. La sintaxis y parámetros son los mismos
que para <tt/StartQuery/.
<p>
Ejemplo de consulta:
<tscreen><verb>
UPDATE call SET duration = %d WHERE gkname = '%g' AND sessid = '%s'
</verb></tscreen>

<item><tt/StopQuery=UPDATE .../<newline>
Por defecto: <tt>N/A</tt>
<p>
Define una consulta SQL usada para actualizar el registro de llamada en una base
de datos cuando la llamada ha finalizado (desconectada). La sintaxis y parámetros
son los mismos que para <tt/StartQuery/.
<p>
Ejemplo de consulta:
<tscreen><verb>
UPDATE call SET duration = %d, dtime = '%{disconnect-time}' WHERE gkname = '%g' AND sessid = '%s'
</verb></tscreen>

<item><tt/StopQueryAlt=INSERT .../<newline>
Por defecto: <tt>N/A</tt>
<p>
Define una consulta SQL usada para actualizar un registro de llamada en una base
de datos cuando la llamada ha finalizado (desconectada) en caso de que <tt/StopQuery/
falle (porque el registro de llamada no exista ya, por ejemplo). La sintaxis y
parámetros son los mismos que para <tt/StartQuery/.
<p>
Ejemplo de consulta:
<tscreen><verb>
INSERT INTO call (gkname, sessid, username, calling, called, duration) 
	VALUES ('%g', '%s', '%u', '%{Calling-Station-Id}', '%{Called-Station-Id}', %d)
</verb></tscreen>

<item><tt/TimestampFormat=MySQL/<newline>
Default: <tt>N/A</tt>
<p>
Formato de cadena de fecha y hora usada en consultas. Si este atributo no es
especificado, uno global de la sección principal de gatekeeper será aplicado.

</itemize>


