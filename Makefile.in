# -*- mode: Makefile -*-
# Copyright (C) 2002 by its various Authors, see CVS-log
#
# PURPOSE OF THIS FILE: Make file for OpenH323 Gatekeeper
#
# - Automatic Version Information via RCS:
#   $Id$
#   $Source$
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#

PROG	 = gnugk
SOURCES	 = main.cxx singleton.cxx job.cxx yasocket.cxx h323util.cxx \
           Toolkit.cxx SoftPBX.cxx GkStatus.cxx RasTbl.cxx          \
           Routing.cxx Neighbor.cxx GkClient.cxx gkauth.cxx         \
           RasSrv.cxx ProxyChannel.cxx gk.cxx version.cxx gkacct.cxx \
		   @SOURCES@

# colon, the empty variable and a single space are special characters to
# MAKE and may cause trouble. Let's 'quote' the little bastards by
# assigning it to a variable
colon:=:
comma:=,
empty:=
space:=$(empty) $(empty)

# remove half updated or corrupt files
.DELETE_ON_ERROR:

# heuristic to make sure the libraries we depend on so heavily can be found
ifndef PWLIBDIR
	PWLIBDIR=@PWLIBDIR@
endif
ifndef OPENH323DIR
	OPENH323DIR=@OPENH323DIR@
endif
ifndef TMP
  TMP=/tmp
endif

CWD:=$(shell pwd)

# having an own idea about default targets. This leads to nicly
# maintainable binaries with proper library dependence, libraries may be
# replaced on the fly.
.PHONY: bothdepend bothshared gkdefault
.DEFAULT: gkdefault
gkdefault: bothdepend bothshared

# LD_RUN_LIST is the list form of the LD_RUN_PATH
LD_RUN_LIST := $(subst $(colon),$(space),$(LD_RUN_PATH))
LD_RUN_LIST += $(PWLIBDIR)/lib $(OPENH323DIR)/lib

# Gatekeeper Global Version String to mark object with version info in such
# a way that it is retrievable by the std. version/revision control tools
STDCCFLAGS += @STDCCFLAGS@
LDFLAGS    += @LDFLAGS@
ENDLDLIBS  += @ENDLDLIBS@
ENDLDFLAGS += @ENDLDFLAGS@

# use for versioning
STDCCFLAGS += -D'MANUFACTURER=@MANUFACTURER@'
STDCCFLAGS += -D'PROGRAMMNAME=@PROGRAMNAME@'
STDCCFLAGS += -D'GKGVS=@GNUGK_GVS@'

# automatically include debugging code or not
ifdef PASN_NOPRINT
  STDCCFLAGS += -DPASN_NOPRINT
else
  STDCCFLAGS += -DPTRACING
endif

ifndef ANSI
  STDCCFLAGS += -DGK_NOANSI
endif

###
### Including the general make rules of OpenH323
###

include $(OPENH323DIR)/openh323u.mak

STDCCFLAGS	+= -DMAJOR_VERSION=@GNUGK_MAJOR_VERSION@ -DMINOR_VERSION=@GNUGK_MINOR_VERSION@ -DBUILD_NUMBER=@GNUGK_BUILD_NUMBER@

ifneq (@HAS_LEVELTWO_LDAPAPI@,0)
  LDAP_LIB="libldapapi_$(PLATFORMTYPE)_$(OBJ_SUFFIX)"
  TARGET_LIBS += $(LDAP_LIB)
  $(LDAP_LIB):
ifdef DEBUG
	$(MAKE) -C ldap/src debug
else
	$(MAKE) -C ldap/src opt
endif
  $(TARGET): $(OBJS) $(TARGET_LIBS)
endif

# delete time-stamp files on clean
#CLEAN_FILES += gktimestamp.c ldaplibtimestamp.c

# delete corefiles (also the Linux-kind)
#CLEAN_FILES += $(wildcard core.*)

# extra targets
addpasswd: $(OBJDIR)/addpasswd.o
	$(CXX) -o $(OBJDIR)/addpasswd $(CFLAGS) $(OBJDIR)/addpasswd.o $(LDFLAGS) -l$(PTLIB_BASE)$(LIB_TYPE) $(ENDLDLIBS) $(ENDLDFLAGS)

doc:	docs/manual.sgml
	cd docs; sgml2html manual.sgml; \
	which bg5sgml2html > /dev/null 2>&1 && \
	bg5sgml2html manual-zh.sgml || true

#
# By this command the build number may be incremented
#
.PHONY: increment

# Use this to increment the build number
increment:
	-@BN=$(GNUGK_BUILD_NUMBER); \
        BNN=`expr "$$BN" + 1`; \
        echo "Upgrading from build $$BN to $$BNN"; \
        cp $(GNUGK_VERSION_FILE) $(TMP)/$(GNUGK_VERSION_FILE); \
        sed -e 's/BUILD_NUMBER.*'"$$BN"'/BUILD_NUMBER '"$$BNN/" \
                $(TMP)/$(GNUGK_VERSION_FILE) > $(GNUGK_VERSION_FILE); \
        rm -f $(TMP)/$(GNUGK_VERSION_FILE)


ifdef notused
# These files are dummys to control the dependency of the GK and its
# libraries like LDAP-API, OpenH323Lib and PWLib. The GKGVS
# variable here is helpfull to monitor the operation
TIMESTAMP_MARKER=$(OBJDIR)/gktimestamp.mark $(OBJDIR)/ldaplibtimestamp.mark
.SECONDARY: $(TIMESTAMP_MARKER) # Do not delete after action
$(TIMESTAMP_MARKER):
	-@echo '###=> Building time-stamp file $@ because of $? of $^'
	@echo '/* this file is autogenerated my make, editing is to no avail */\
               static const char * buildID=$(GKGVS); /* should not be empty */' > $@ ;\
        sleep 1

#
# Extra dependencies
#
$(TARGET): $(OBJDIR)/gktimestamp.mark
$(LDAP_LIB): $(OBJDIR)/ldaplibtimestamp.mark

#
# This models the dependencies between the GK and its
# libraries like LDAP-API, OpenH323Lib and PWLib.
#
SPECIAL_LIB_DEPENDENCIES:=$(wildcard $(PWLIBDIR)/lib/libpt_$(PLATFORM_TYPE)_$(OBJ_SUFFIX).$(LIB_SUFFIX)*) $(wildcard $(OPENH323DIR)/lib/libh323_$(PLATFORM_TYPE)_$(OBJ_SUFFIX).$(LIB_SUFFIX)*)
#$(warning DEPENDENCIES ARE $(SPECIAL_LIB_DEPENDENCIES))
$(OBJDIR)/gktimestamp.mark: $(SPECIAL_LIB_DEPENDENCIES)
$(OBJDIR)/gktimestamp.mark: $(wildcard ldap/lib/libldapapi_$(PLATFORM_TYPE)_$(OBJ_SUFFIX)*)

$(OBJDIR)/ldaplibtimestamp.mark: $(SPECIAL_LIB_DEPENDENCIES)

$(OBJDIR)/version.o: FORCE

FORCE:

# set the run path only once from the run-list
LD_RUN_PATH = $(subst $(space),$(colon),$(strip $(LD_RUN_LIST)))
#$(warning LD_RUN_PATH is <$(LD_RUN_PATH)>)

export LD_RUN_PATH
export LDAP1823DIR
export LDAP1823LIBDIR
export LDAP1823LIBNM
export HAS_LDAP
export MWBB1_TAG
export MYSQLDIR
export MEMORY_CHECK

endif # notused
# end
